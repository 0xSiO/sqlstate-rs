pub mod subclass;

pub use self::subclass::*;

pub enum Category {
    Success,
    Warning,
    NoData,
    Exception,
}

#[non_exhaustive]
pub enum SqlState {
    Success,
    Warning(Warning),
    NoData(NoData),
    DynamicSqlError(DynamicSqlError),
    ConnectionException(ConnectionException),
    TriggeredActionException,
    FeatureNotSupported(FeatureNotSupported),
    InvalidTargetTypeSpecification,
    InvalidSchemaNameListSpecification,
    LocatorException(LocatorException),
    ResignalWhenHandlerNotActive,
    InvalidGrantor,
    InvalidSqlInvokedProcedureReference,
    SqlXmlMappingError(SqlXmlMappingError),
    InvalidRoleSpecification,
    InvalidTransformGroupNameSpecification,
    TargetTableDisagreesWithCursorSpecification,
    AttemptToAssignToNonUpdatableColumn,
    AttemptToAssignToOrderingColumn,
    ProhibitedStatementDuringTriggerExecution(ProhibitedStatementDuringTriggerExecution),
    InvalidForeignServerSpecification,
    PassthroughSpecificCondition(PassthroughSpecificCondition),
    DiagnosticsException(DiagnosticsException),
    XQueryError,
    CaseNotFoundForCaseStatement,
    CardinalityViolation,
    DataException(DataException),
    IntegrityConstraintViolation(IntegrityConstraintViolation),
    InvalidCursorState,
    InvalidTransactionState(InvalidTransactionState),
    InvalidSqlStatementName,
    TriggeredDataChangeViolation(TriggeredDataChangeViolation),
    InvalidAuthorizationSpecification,
    DependentPrivilegeDescriptorsExist,
    InvalidCharsetName,
    InvalidTransactionTermination,
    InvalidConnectionName,
    SqlRoutineException(SqlRoutineException),
    InvalidCollationName,
    InvalidSqlStatementIdentifier,
    InvalidSqlDescriptorName,
    InvalidCursorName,
    InvalidConditionNumber,
    CursorSensitivityException(CursorSensitivityException),
    ExternalRoutineException(ExternalRoutineException),
    ExternalRoutineInvocationException(ExternalRoutineInvocationException),
    SavepointException(SavepointException),
    AmbiguousCursorName,
    InvalidCatalogName,
    InvalidSchemaName,
    TransactionRollback(TransactionRollback),
    SyntaxErrorOrAccessRuleViolation,
    WithCheckOptionViolation,
    UnhandledUserDefinedException,
    OlbSpecificError(OlbSpecificError),
    DatalinkException(DatalinkException),
    FdwSpecificCondition(FdwSpecificCondition),
    CliSpecificCondition(CliSpecificCondition),
    RemoteDatabaseAccess(RemoteDatabaseAccess),
    Other(String),
}
